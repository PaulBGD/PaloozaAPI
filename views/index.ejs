<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/html">
<head>
    <title>Palooza API</title>
    <link href='//fonts.googleapis.com/css?family=Oswald' rel='stylesheet' type='text/css'>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link href="main.css" rel="stylesheet">
    <style>
        .navbar-brand {
            font-family: 'Oswald', sans-serif;
            text-transform: uppercase;
            color: #fff;
        }

        .navbar-brand > span {
            color: #E74C3C;
        }

        #home {
            padding-bottom: 20px;
        }

        #baseUrl {
            display: inline-block;
            width: auto;
            max-width: 100%;
        }

        pre.form-control {
            height: auto;
            width: auto;
            overflow-x: auto;
        }
    </style>
</head>
<body data-spy="scroll" data-target="#sidebaraMain">
<nav id="navbar" class="navbar navbar-default navbar-fixed-top">
    <div class="navbar-header">
        <span class="navbar-brand">
            <a href="#" class="bars" data-toggle="sidebar" data-target="#sidebarMain"><span></span><span></span><span></span></a>
            Minigame <span>Palooza</span>
        </span>
    </div>
    <div class="collapse navbar-collapse" id="nav-collapse">
        <ul class="nav navbar-nav navbar-right">
            <li><a href="http://www.minigamepalooza.com">Back to Site</a></li>
            <li id="logoutList" class="hidden"><a id="logOut" href="#">Log Out <img id="avatar" src="#" class="img-rounded"></a></li>
        </ul>
    </div>
</nav>

<ul id="sidebarMain" class="nav nav-sidebar">
    <%
    for (var property in nav) {
        var navMethods = nav[property];
    %>
    <li class="dropdown">
        <a href="#" class="dropdown-toggle" data-toggle="dropdown"><span class="caret material-icons"></span> <%= property %></a>
        <ul class="dropdown-menu" style="margin-left: 10px">
            <%
            navMethods.forEach(function (method) {
                var path = method.parent.replace('/', '') + method.path;
            %>
            <li class="sidebar-link"><a href="#<%= path %>"><%= method.parent + '/' + method.path %></a></li>
            <%
            });
            %>
        </ul>
    </li>
    <%
    }
    %>
</ul>

<div class="jumbotron-header">
    <div class="header">
        <h1 class="header-nav">Palooza API</h1>
    </div>

    <div id="home" class="fixed panel panel-default">
        <div class="padded">
            <div class="text-center">
                <br>

                <div class="form-group">
                    <label for="baseUrl" class="text-left">Base URL</label><br>
                    <pre id="baseUrl" class="well well-sm">http://dev.minigamepalooza.com/api/v1</pre>
                </div>
                <iframe src="https://ghbtns.com/github-btn.html?user=PaulBGD&repo=PaloozaAPI&type=star&count=true&size=large" frameborder="0" scrolling="0" width="120px" height="30px"></iframe>
                <iframe src="https://ghbtns.com/github-btn.html?user=PaulBGD&repo=PaloozaAPI&type=fork&count=true&size=large" frameborder="0" scrolling="0" width="120px" height="30px"></iframe>
            </div>
        </div>
    </div>

    <%
    for (var property in nav) {
        var methods = nav[property];
    %>
    <div id="<%= property %>" class="fixed" style="margin-top: 50px">
        <div class="padded">
            <%
            methods.forEach(function (method) {
                var path = method.parent.replace('/', '') + method.path;
            %>
            <div id="<%= path %>">
                <div class="page-header">
                    <h3><%= method.parent + '/' + method.path %></h3>
                </div>
                <div>
                    <h4><%= method.description %></h4>

                    <%
                    if (Object.keys(method.params).length > 0) {
                    %>
                    <h5>Parameters</h5>
                    <%
                    }
                            for (var property in method.params) {
                        var param = method.params[property];
                    %>
                    <div>
                        <%
                        if (param.required) {
                        %>
                        <b>Required</b>
                        <%
                        }
                        %>
                        <code><%= property %></code> <%= param.description %>
                    </div>
                    <%
                    }
                    %>
                    <h5>Example</h5>
                    <pre class="well well-sm">POST http://dev.minigamepalooza.com/api/v1/<%= method.parent + '/' + method.path %></pre>
                    <pre class="well well-lg"><%= JSON.stringify(method.example, null, 3) %></pre>
                </div>
            </div>
            <%
            });
            %>
        </div>
    </div>
    <%
    }
    %>
</div>

<script src="//code.jquery.com/jquery-1.10.2.min.js"></script>
<script src="//maxcdn.bootstrapcdn.com/bootstrap/3.3.5/js/bootstrap.min.js" integrity="sha256-Sk3nkD6mLTMOF0EOpNtsIry+s1CsaqQC1rVLTAy+0yc= sha512-K1qjQ+NcF2TYO/eI3M6v8EiNYZfA95pQumfvcVrTHtwQVDG+aHRqLi/ETn2uB+1JqwYqVG3LIvdm9lj6imS/pQ==" crossorigin="anonymous"></script>
<script src="strapalooza.js"></script>
<script>
    // http://paulirish.com/2011/requestanimationframe-for-smart-animating/
    // http://my.opera.com/emoller/blog/2011/12/20/requestanimationframe-for-smart-er-animating

    // requestAnimationFrame polyfill by Erik Möller. fixes from Paul Irish and Tino Zijdel

    // MIT license

    (function () {
        var lastTime = 0;
        var vendors = ['ms', 'moz', 'webkit', 'o'];
        for (var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {
            window.requestAnimationFrame = window[vendors[x] + 'RequestAnimationFrame'];
            window.cancelAnimationFrame = window[vendors[x] + 'CancelAnimationFrame']
                    || window[vendors[x] + 'CancelRequestAnimationFrame'];
        }
        if (!window.requestAnimationFrame)
            window.requestAnimationFrame = function (callback, element) {
                var currTime = new Date().getTime();
                var timeToCall = Math.max(0, 16 - (currTime - lastTime));
                var id = window.setTimeout(function () {
                            callback(currTime + timeToCall);
                        },
                        timeToCall);
                lastTime = currTime + timeToCall;
                return id;
            };
        if (!window.cancelAnimationFrame)
            window.cancelAnimationFrame = function (id) {
                clearTimeout(id);
            };
    }());

    (function ($) {
        var hrefs = document.getElementsByTagName('a');
        var length = hrefs.length;
        while (length--) {
            var a = hrefs[length];
            (function (a) {
                a.addEventListener('click', function (e) {
                    var href = a.getAttribute('href');
                    if (href && href.length > 1 && href.charAt(0) == '#') {
                        var elem = document.getElementById(href.substr(1));
                        var offsetTop = elem.offsetTop;
                        while (elem = elem.offsetParent) {
                            offsetTop += elem.offsetTop;
                        }
                        var spot = offsetTop - 120;
                        var time = Math.abs(window.scrollY - offsetTop) / 10;
                        smoothScrollTo(spot, time);
                        e.preventDefault();
                        return false;
                    }
                });
            })(a);
        }
        function smoothScrollTo(target, duration) {
            var offset = window.pageYOffset;
            var delta = target - window.pageYOffset; // Y-offset difference
            duration = duration || 1000; // default 1 sec animation
            var start = Date.now(); // get start time
            var factor = 0;

            function step() {
                var y;
                factor = (Date.now() - start) / duration; // get interpolation factor
                if (factor >= 1) {
                    clearInterval(timer); // stop animation
                    factor = 1;           // clip to max 1.0
                }
                y = factor * delta + offset;
                requestAnimationFrame(window.scrollBy.bind(window, 0, y - window.pageYOffset));
            }

            var timer = setInterval(step, 10);
            return timer; // return the interval timer, so you can clear it elsewhere
        }

        var targets = {};

        $('.sidebar-link > a').each(function () {
            var $this = $(this);
            targets[$this.attr('href')] = $this;
        });

        $(window).on('scroll', function () {
            for (var property in targets) {
                if (targets.hasOwnProperty(property)) {
                    var target = $(property);
                    if (checkVisible(target.find('h3'), 'visible')) {
                        $('.sidebar-link.active').toggleClass('active');
                        $('#sidebarMain > li.active').toggleClass('active');
                        targets[property].parent().addClass('active').parent().parent().addClass('active');
                        return;
                    }
                }
            }
        });

        function checkVisible(elm) {
            var vpH = $(window).height(), // Viewport Height
                    st = $(window).scrollTop(), // Scroll Top
                    y = $(elm).offset().top,
                    elementHeight = $(elm).height();

            return ((y < (vpH + st)) && (y > (st - elementHeight)));
        }

        $('body').scrollspy({target: '#sidebaraMain'})
    })(jQuery);
</script>
</body>
</html>
